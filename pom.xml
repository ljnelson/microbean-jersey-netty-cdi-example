<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.ljnelson</groupId>
  <artifactId>microbean-jersey-netty-cdi-example</artifactId>
  <version>0.0.3-SNAPSHOT</version>

  <parent>
    <groupId>org.microbean</groupId>
    <artifactId>microbean-pluginmanagement-pom</artifactId>
    <version>11</version>
    <relativePath />
  </parent>

  <name>microBean™ Jersey Netty CDI Example Project</name>
  <description>${project.name}</description>
  <url>http://ljnelson.github.io/${project.artifactId}</url>
  <inceptionYear>2019</inceptionYear>

  <scm>
    <connection>scm:git:git@github.com:ljnelson/${project.artifactId}.git</connection>
    <developerConnection>scm:git:git@github.com:ljnelson/${project.artifactId}.git</developerConnection>
    <url>https://github.com/ljnelson/${project.artifactId}/</url>
    <tag>HEAD</tag>
  </scm>

  <organization>
    <name>microBean™</name>
    <url>http://microbean.systems/</url>
  </organization>

  <dependencyManagement>
    <dependencies>


      <!-- Imports. -->


      <dependency>
        <groupId>org.microbean</groupId>
        <artifactId>microbean-weld-se-environment</artifactId>
        <version>0.7.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>


      <!-- Normal dependencies. -->


      <dependency>
        <groupId>jakarta.enterprise</groupId>
        <artifactId>jakarta.enterprise.cdi-api</artifactId>
        <version>2.0.2</version>
        <type>jar</type>
      </dependency>

      <dependency>
        <groupId>jakarta.ws.rs</groupId>
        <artifactId>jakarta.ws.rs-api</artifactId>
        <version>2.1.6</version>
        <type>jar</type>
      </dependency>

      <dependency>
        <groupId>org.glassfish.jersey.inject</groupId>
        <artifactId>jersey-hk2</artifactId>
        <version>2.29.1</version>
        <type>jar</type>
      </dependency>

      <dependency>
        <groupId>org.jboss.weld</groupId>
        <artifactId>weld-core-impl</artifactId>
        <version>3.1.2.Final</version>
        <type>jar</type>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.3_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      
      <dependency>
        <groupId>org.microbean</groupId>
        <artifactId>microbean-jersey-netty-cdi</artifactId>
        <version>0.2.8</version>
        <type>jar</type>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>


    <!-- Test-scoped dependencies. -->


    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <type>jar</type>
      <scope>test</scope>
    </dependency>


    <!-- Runtime-scoped dependencies. -->


    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>


    <dependency>
      <groupId>org.microbean</groupId>
      <artifactId>microbean-weld-se-environment</artifactId>
      <type>pom</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.microbean</groupId>
      <artifactId>microbean-jersey-netty-cdi</artifactId>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>


    <!-- Provided-scoped dependencies. -->


    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>jakarta.enterprise.cdi-api</artifactId>
      <type>jar</type>
      <scope>provided</scope>
    </dependency>


    <!-- Compile-scoped dependencies. -->


    <!--
        This dependency cannot be set to provided scope, even though
        ideally we'd like the runtime to determine which "API jar"
        supporting Jakarta RESTful Web Services is included.  If it is
        set to provided scope, then it will not appear at runtime at
        all, because other Jersey artifacts depend on it as well in
        runtime scope.  Setting it here to provided would cause those
        transitive runtime inclusions to be ignored completely.
    -->
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>



  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>Copy dependencies into lib directory</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib</classpathPrefix>
              <mainClass>org.microbean.main.Main</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.config.file>${project.basedir}/src/test/logging.properties</java.util.logging.config.file>
            <runBlockingTests>${runBlockingTests}</runBlockingTests>
          </systemPropertyVariables>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <properties>
    <links>https://jakarta.ee/specifications/restful-ws/2.1/apidocs/,https://jakarta.ee/specifications/cdi/2.0/apidocs/</links>
    <stylesheetfile>css/stylesheet.css</stylesheetfile>
  </properties>

  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>javadoc-no-fork</report>
              <report>test-javadoc-no-fork</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

</project>
